<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dong Haoling&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-09-17T12:45:14.649Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Dong Haoling</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2016/09/18/0917JS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2016/09/18/0917JS学习笔记/</id>
    <published>2016-09-18T10:48:13.966Z</published>
    <updated>2016-09-17T12:45:14.649Z</updated>
    
    <content type="html">&lt;h2 id=&quot;JS学习笔记（9-17）&quot;&gt;&lt;a href=&quot;#JS学习笔记（9-17）&quot; class=&quot;headerlink&quot; title=&quot;JS学习笔记（9.17）&quot;&gt;&lt;/a&gt;JS学习笔记（9.17）&lt;/h2&gt;&lt;h4 id=&quot;Array类型的方法&quot;&gt;&lt;a href=&quot;#Array类型的方法&quot; class=&quot;headerlink&quot; title=&quot;Array类型的方法&quot;&gt;&lt;/a&gt;&lt;strong&gt;Array类型的方法&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;转换方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;toString()&lt;/code&gt;：对数组里的每个元素调用toString()，然后用”,”连接数组。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;valueOf()&lt;/code&gt;： 返回原数组&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;join()&lt;/code&gt;： 接受一个参数，连接数组。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var colors = [&amp;quot;red&amp;quot;, &amp;quot;blue&amp;quot;, &amp;quot;green&amp;quot;]; 
colors.length = 4; //设置数组长度为4，则第四项(colors[3])为undefined
 alert(colors.join(&amp;apos;||&amp;apos;) ) // 结果为：red||green||blue||， 因为undefined 的项toString()后的结果是空字符串
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;栈方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;push()&lt;/code&gt;： 返回数组长度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pop()&lt;/code&gt;： 返回最后一个元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;队列方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;shift()&lt;/code&gt;： 返回第一个元素&lt;br&gt;&lt;code&gt;var item = colors.shift()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;unshift()&lt;/code&gt;：在数组前端添加任意个项并返回新数组的长度&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var colors = new Array();
var count = colors.unshift(&amp;quot;red&amp;quot;, &amp;quot;green&amp;quot;); // colors = [&amp;quot;red&amp;quot;, &amp;quot;green&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重排序方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;reverse()&lt;/code&gt;： 反转数组项的顺序&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sort()&lt;/code&gt;： 默认会调用toString()方法转换数组项，然后比较数组元素的大小，从小到大排序。&lt;/p&gt;
&lt;p&gt;  可以接受比较函数作为参数，如果第一个参数位于第二个参数之前，返回负数，如果两个参数相等，返回0，如果第一个参数位于第二个参数之后，返回负数。比较函数可如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function compare(value1, value2) {
    if(value1 &amp;lt; value2) return-1;
    else if(value1 &amp;gt; value2) return 1;
    else return 0;
}
var values = [1,10,5,15];
values.sort(compare);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;操作方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;concat()&lt;/code&gt;：可以基于当前数组中的所有项创建一个新数组，首先创建当前数组的一个副本，然后将接收到的参数添加到这个副本的末尾。如果传递给concat()方法的是一个或多个数组，则该方法会将这些数组中的每一项都添加到结果数组中。所以该方法可以用来&lt;strong&gt;连接两个或多个数组&lt;/strong&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var a = [1,2,3]; 
var b = [3,4];  
var c = a.concat(&amp;quot;hi&amp;quot;, b); // c = [1,2,3,&amp;quot;hi&amp;quot;,3,4]          
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;slice()&lt;/code&gt;：能够基于当前数组的一个或多个项创建一个新数组。接收两个参数，要返回项的起始和结束位置（返回的新数组不包括结束位置）。若只有一个参数，则返回从起始位置到当前数末尾的所有项。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var a = [1,2,3,4,5];
var b = a.slice(1); //b = [2,3,4,5] 
var c = a.slice(1,4) //c = [2,3,4]
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;splice()&lt;/code&gt;：用于向数组中部插入项。&lt;strong&gt;返回从原数组中删除的项&lt;/strong&gt;。有以下三种用法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;删除：指定2个参数，要删除的第一项的位置和要删除的项数。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;插入：向指定位置插入任意数量的项。指定3个参数：起始位置，0（要删除的项数为0），要插入的项。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;colors.splice(2,0,&amp;quot;red&amp;quot;,&amp;quot;blue&amp;quot;) // 从位置2开始插入字符串&amp;quot;red&amp;quot;,&amp;quot;blue&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;替换：可以向指定位置插入任意数量的项，且删除任意数量的项。指定3个参数：起始位置，要删除的项数，要插入的项。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;colors.splice(2,1,&amp;quot;red&amp;quot;,&amp;quot;blue&amp;quot;) // 删除位置2的项，然后从位置2开始插入字符串&amp;quot;red&amp;quot;,&amp;quot;blue&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;位置方法&lt;ul&gt;
&lt;li&gt;&lt;code&gt;indexOf()&lt;/code&gt;：返回查找的项在数组中的位置，从头开始查找&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lastIndexOf()&lt;/code&gt;：同样返回查找的项在数组中的位置，从数组末尾开始查找&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;迭代方法&lt;/p&gt;
&lt;p&gt;  都接受一个函数作为传入参数，该函数会接收三个参数，数据项的值，该项在数组中的位置和数组对象本身。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;every()&lt;/code&gt;：传入一个函数，对数组中的每一项运行给定函数，每一项都返回true,则最后返回true。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filter()&lt;/code&gt;：传入一个函数，对数组中的每一项运行给定函数，返回函数会返回true的项组成的数组。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;forEach()&lt;/code&gt;：传入一个函数，对数组中的每一项运行给定函数，没有返回值。&lt;br&gt;&lt;code&gt;var numbers = [1,2,3,4];&lt;/code&gt;&lt;br&gt;&lt;code&gt;numbers.forEach(function(item, index, array){...})&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;map()&lt;/code&gt;：传入一个函数，对数组中的每一项运行给定函数，返回函数调用的结果组成的数组。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;some()&lt;/code&gt;：传入一个函数，对数组中的每一项运行给定函数，如果函数对任一项返回true，就返回true。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;归并方法&lt;/p&gt;
&lt;p&gt;  迭代数组中的所有项，构建一个最终返回的值。接受2个参数：在每一项上调用的函数，归并的初始值。传给函数的4个参数：前一个值，当前值，项的索引，数组对象。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;reduce()&lt;/code&gt;：从数组第一项开始&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;reduceRight()&lt;/code&gt;：从数组最后一项开始&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var values = [1,2,3,4,5];
var sum = values.reduce(function(prev, cur, index, array){
    return prev+cur;
}); 
console.log(sum) //15
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;AJAX&quot;&gt;&lt;a href=&quot;#AJAX&quot; class=&quot;headerlink&quot; title=&quot;AJAX&quot;&gt;&lt;/a&gt;&lt;strong&gt;AJAX&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;AJAX = Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建XMLHttpRequest对象&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var xmlhttp;
if (window.XMLHttpRequest)
  {// code for IE7+, Firefox, Chrome, Opera, Safari
      xmlhttp=new XMLHttpRequest();
  }
else
  {// code for IE6, IE5
      xmlhttp=new ActiveXObjec(&amp;quot;Microsoft.XMLHTTP&amp;quot;);
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;向服务器发送请求&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;xmlhttp.open(&amp;quot;GET&amp;quot;,&amp;quot;demo_get2.asp?fname=Bill&amp;amp;lname=Gates&amp;quot;,true);
xmlhttp.send();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  open的三个参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;method:请求使用的方法&lt;/li&gt;
&lt;li&gt;url：请求的地址&lt;/li&gt;
&lt;li&gt;&lt;p&gt;async:是否异步，true表示异步，如果异步，则需要加onreadystatechange函数。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;xmlhttp.open(&amp;quot;GET&amp;quot;,&amp;quot;test1.txt&amp;quot;,true);
xmlhttp.send();
xmlhttp.onreadystatechange=function()
  {
      if (xmlhttp.readyState==4 &amp;amp;&amp;amp; xmlhttp.status==200)
    {
        document.getElementById(&amp;quot;myDiv&amp;quot;).innerHTML=xmlhttp.responseText;
    }
 }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果设置为async设置为false,则不需要加onreadystatechange函数。如果没有响应，则挂起应用程序，一般不推荐使用。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;xmlhttp.open(&amp;quot;GET&amp;quot;,&amp;quot;test1.txt&amp;quot;,false);
xmlhttp.send();
document.getElementById(&amp;quot;myDiv&amp;quot;).innerHTML=xmlhttp.responseText;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;服务器响应&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;responseText属性：响应的是文本&lt;/li&gt;
&lt;li&gt;&lt;p&gt;responseXML属性：响应的是XML&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;xmlDoc=xmlhttp.responseXML;
txt=&amp;quot;&amp;quot;;
x=xmlDoc.getElementsByTagName(&amp;quot;ARTIST&amp;quot;);
for (i=0;i&amp;lt;x.length;i++)
  {
      txt=txt + x[i].childNodes[0].nodeValue + &amp;quot;&amp;lt;br /&amp;gt;&amp;quot;;
  }
document.getElementById(&amp;quot;myDiv&amp;quot;).innerHTML=txt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;XMLHttpRequest对象的重要属性&lt;ul&gt;
&lt;li&gt;onreadystatechange： 每当 readyState 属性改变时，就会调用该函数&lt;/li&gt;
&lt;li&gt;readyState&lt;ul&gt;
&lt;li&gt;0: 请求未初始化&lt;/li&gt;
&lt;li&gt;1: 服务器连接已建立&lt;/li&gt;
&lt;li&gt;2: 请求已接收&lt;/li&gt;
&lt;li&gt;3: 请求处理中&lt;/li&gt;
&lt;li&gt;4: 请求已完成，且响应已就绪&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;status：200 = “OK”， 404 = “未找到页面”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;与-的区别&quot;&gt;&lt;a href=&quot;#与-的区别&quot; class=&quot;headerlink&quot; title=&quot;===与==的区别&quot;&gt;&lt;/a&gt;&lt;strong&gt;===与==的区别&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;===： 不做类型转换，直接判等&lt;ol&gt;
&lt;li&gt;如果类型不同，就[不相等] &lt;/li&gt;
&lt;li&gt;如果两个都是数值，并且是同一个值，那么[相等]；(！例外)的是，如果其中至少一个是NaN，那么[不相等]。（判断一个值是否是NaN，只能用isNaN()来判断） &lt;/li&gt;
&lt;li&gt;如果两个都是字符串，每个位置的字符都一样，那么[相等]；否则[不相等]。 &lt;/li&gt;
&lt;li&gt;如果两个值都是true，或者都是false，那么[相等]。 &lt;/li&gt;
&lt;li&gt;如果两个值都引用同一个对象或函数，那么[相等]；否则[不相等]。 &lt;/li&gt;
&lt;li&gt;如果两个值都是null，或者都是undefined，那么[相等]。 &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;==：先做类型转换，再判等&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果两个值类型相同，进行 === 比较。 &lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果两个值类型不同，他们可能相等。根据下面规则进行类型转换再比较： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果一个是null、一个是undefined，那么[相等]。 &lt;/li&gt;
&lt;li&gt;如果一个是字符串，一个是数值，把字符串转换成数值再进行比较。 &lt;/li&gt;
&lt;li&gt;如果任一值是 true，把它转换成 1 再比较；如果任一值是 false，把它转换成 0 再比较。 &lt;/li&gt;
&lt;li&gt;如果一个是对象，另一个是数值或字符串，把对象转换成基础类型的值再比较。对象转换成基础类型，利用它的toString或者valueOf方法。 js核心内置类，会尝试valueOf先于toString；例外的是Date，Date利用的是toString转换。非js核心的对象，令说。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;任何其他组合，都[不相等]。 &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var a = 3;
var b = &amp;quot;3&amp;quot;;
alert(a==b) //true，类型不同，会把字符串转化为数字
alert(a===b) //false 
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;####&lt;strong&gt;正则&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pattern：/regExpr/flag&lt;ul&gt;
&lt;li&gt;flag：&lt;ul&gt;
&lt;li&gt;g：全局模式，发现第一个匹配串后依然继续匹配。&lt;/li&gt;
&lt;li&gt;i：不区分大小写模式。&lt;/li&gt;
&lt;li&gt;m：多行模式，到达一行文本末尾后依然匹配下一行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;String的match()方法和RegExp的exec()方法基本相同。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var text = &amp;quot;cat, bat, sat, fat&amp;quot;;
var pattern = /.at/;
//与pattern.exec(text)结果相同，但如果pattern=/.at/g,那么两者得到的matches会有所不同
var matches = text.match(pattern);
alert(matches.index); //0
alert(matches); //[&amp;quot;cat&amp;quot;]
alert(pattern.lastIndex); //0
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;JS学习笔记（9-17）&quot;&gt;&lt;a href=&quot;#JS学习笔记（9-17）&quot; class=&quot;headerlink&quot; title=&quot;JS学习笔记（9.17）&quot;&gt;&lt;/a&gt;JS学习笔记（9.17）&lt;/h2&gt;&lt;h4 id=&quot;Array类型的方法&quot;&gt;&lt;a href=&quot;#Arr
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>业务学习笔记</title>
    <link href="http://yoursite.com/2016/06/22/haoling/"/>
    <id>http://yoursite.com/2016/06/22/haoling/</id>
    <published>2016-06-22T04:56:26.122Z</published>
    <updated>2016-06-22T05:15:13.249Z</updated>
    
    <content type="html">&lt;h2 id=&quot;学习到的业务和问题&quot;&gt;&lt;a href=&quot;#学习到的业务和问题&quot; class=&quot;headerlink&quot; title=&quot;学习到的业务和问题&quot;&gt;&lt;/a&gt;学习到的业务和问题&lt;/h2&gt;&lt;h3 id=&quot;casperjs和前端自动化测试的学习&quot;&gt;&lt;a href=&quot;#casperjs和前端自动化测试的学习&quot; class=&quot;headerlink&quot; title=&quot;casperjs和前端自动化测试的学习&quot;&gt;&lt;/a&gt;casperjs和前端自动化测试的学习&lt;/h3&gt;&lt;p&gt;因为要用到casperjs框架进行前端的自动化测试，所以我周二早上看基宏写的使用casperjs framework测试magellon的case，并且看了一些capserjs的官方文档。&lt;br&gt;在应用方面，capserjs的TESTER_FRAME目录的结构如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--bin 
    -run.sh
    -frame.js
--log
--common
    -lib.js
    -funcs.js
--conf
    -host.conf
    -config.js
--log
--pics
--README
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中与我们编写case相关的目录文件有：bin目录，conf目录。bin目录是用来写自动化test case的，可以一各方面的测试写一个js文件，运行该js文件即可测试相关的内容。运行方式如下（以测试asinRegression.js文件为例）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ casperjs test aisnRegression.js 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其余的目录里：common目录中的lib.js是基宏封装的可以直接通过lib.fun形式调用的方法，pics目录保存的是case运行出现问题时直接保存截图的截图文件，log目录保存的是测试的日志文件。&lt;/p&gt;
&lt;h3 id=&quot;搜索和广告业务的架构的学习&quot;&gt;&lt;a href=&quot;#搜索和广告业务的架构的学习&quot; class=&quot;headerlink&quot; title=&quot;搜索和广告业务的架构的学习&quot;&gt;&lt;/a&gt;搜索和广告业务的架构的学习&lt;/h3&gt;&lt;p&gt;通过学习搜索和广告相关的PPT，我对搜索和广告业务有了一点大概的认识。下图是我整理的我理解中的关于搜索和广告业务的框架图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/Donghaoling/markdown_image/blob/master/IMG_2968.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;搜索和广告业务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;故障&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;预发布问题&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;项目的名称&quot;&gt;&lt;a href=&quot;#项目的名称&quot; class=&quot;headerlink&quot; title=&quot;项目的名称:&quot;&gt;&lt;/a&gt;项目的名称:&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;小需求情况&quot;&gt;&lt;a href=&quot;#小需求情况&quot; class=&quot;headerlink&quot; title=&quot;小需求情况&quot;&gt;&lt;/a&gt;小需求情况&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;业务线&lt;/th&gt;
&lt;th&gt;小需求名称&lt;/th&gt;
&lt;th&gt;是否接手&lt;/th&gt;
&lt;th&gt;不接手原因&lt;/th&gt;
&lt;th&gt;测试策略&lt;/th&gt;
&lt;th&gt;问题&lt;/th&gt;
&lt;th&gt;状态&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;效能提升&quot;&gt;&lt;a href=&quot;#效能提升&quot; class=&quot;headerlink&quot; title=&quot;效能提升&quot;&gt;&lt;/a&gt;效能提升&lt;/h1&gt;&lt;h3 id=&quot;自动化建设&quot;&gt;&lt;a href=&quot;#自动化建设&quot; class=&quot;headerlink&quot; title=&quot;自动化建设&quot;&gt;&lt;/a&gt;自动化建设&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;工具平台建设&quot;&gt;&lt;a href=&quot;#工具平台建设&quot; class=&quot;headerlink&quot; title=&quot;工具平台建设&quot;&gt;&lt;/a&gt;工具平台建设&lt;/h3&gt;&lt;h4 id=&quot;数据测试平台&quot;&gt;&lt;a href=&quot;#数据测试平台&quot; class=&quot;headerlink&quot; title=&quot;数据测试平台&quot;&gt;&lt;/a&gt;数据测试平台&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;无&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;个人感悟&quot;&gt;&lt;a href=&quot;#个人感悟&quot; class=&quot;headerlink&quot; title=&quot;个人感悟&quot;&gt;&lt;/a&gt;个人感悟&lt;/h2&gt;&lt;p&gt;  -&lt;/p&gt;
&lt;h2 id=&quot;其他（资源投入情况）&quot;&gt;&lt;a href=&quot;#其他（资源投入情况）&quot; class=&quot;headerlink&quot; title=&quot;其他（资源投入情况）&quot;&gt;&lt;/a&gt;其他（资源投入情况）&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;周一: 入职培训，装机，申请各类权限&lt;/li&gt;
&lt;li&gt;周二: 学校有事情，请假&lt;/li&gt;
&lt;li&gt;周三: 开会，了解展会的业务，学习B2B业务相关的PPT，学习入职培训PPT&lt;/li&gt;
&lt;li&gt;周四: 部署光年系统到本地，学习入职培训PPT&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;下周计划&quot;&gt;&lt;a href=&quot;#下周计划&quot; class=&quot;headerlink&quot; title=&quot;下周计划&quot;&gt;&lt;/a&gt;下周计划&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;参与联盟或广告的项目&lt;/li&gt;
&lt;li&gt;参与自动化工具的开发和维护&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;学习到的业务和问题&quot;&gt;&lt;a href=&quot;#学习到的业务和问题&quot; class=&quot;headerlink&quot; title=&quot;学习到的业务和问题&quot;&gt;&lt;/a&gt;学习到的业务和问题&lt;/h2&gt;&lt;h3 id=&quot;casperjs和前端自动化测试的学习&quot;&gt;&lt;a href=&quot;#casper
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello my blog</title>
    <link href="http://yoursite.com/2016/03/02/first-blog/"/>
    <id>http://yoursite.com/2016/03/02/first-blog/</id>
    <published>2016-03-02T13:31:00.731Z</published>
    <updated>2016-03-02T13:52:27.948Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;试试中文&quot;&gt;&lt;a href=&quot;#试试中文&quot; class=&quot;headerlink&quot; title=&quot;试试中文&quot;&gt;&lt;/a&gt;试试中文&lt;/h3&gt;&lt;p&gt;######中文字体&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/03/02/hello-world/"/>
    <id>http://yoursite.com/2016/03/02/hello-world/</id>
    <published>2016-03-02T12:07:48.265Z</published>
    <updated>2016-03-02T12:07:48.267Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
